/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Famacy.view;

import Famacy.model.Employee;
import Famacy.model.Message;
import Famacy.repository.AccountRepository;
import Famacy.repository.EmployeeRepository;
import Famacy.repository.MessageRepository;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cruis
 */
public class MessageForm extends javax.swing.JFrame {
    
    private String username;
    private AccountRepository accountRepository;
    private EmployeeRepository employeeRepository;
    private MessageRepository messageRepository;
    private DefaultTableModel model;
    
    public MessageForm(String username) {
        this.username = username;
        employeeRepository = new EmployeeRepository();
        messageRepository = new MessageRepository();
        accountRepository = new AccountRepository();
        
        initComponents();
        messageUserIndicatorLabel.setText("User: " + username);
        loadEmployeeList();
        loadMessages();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messagePanel = new javax.swing.JPanel();
        messageBoxLabel = new javax.swing.JLabel();
        messageUserIndicatorLabel = new javax.swing.JLabel();
        messageUserIndicatorLabel1 = new javax.swing.JLabel();
        userComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTable = new javax.swing.JTable();
        sendButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        messageBoxLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        messageBoxLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageBoxLabel.setText("Message Box");

        messageUserIndicatorLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        messageUserIndicatorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageUserIndicatorLabel.setText("User : ");

        messageUserIndicatorLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        messageUserIndicatorLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageUserIndicatorLabel1.setText("Conversation with :");

        userComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userComboBoxActionPerformed(evt);
            }
        });

        messageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message From", "Message To", "Content"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        messageTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(messageTable);

        sendButton.setText("Send Message");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout messagePanelLayout = new javax.swing.GroupLayout(messagePanel);
        messagePanel.setLayout(messagePanelLayout);
        messagePanelLayout.setHorizontalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageBoxLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(messagePanelLayout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(messageUserIndicatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(messagePanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(messageUserIndicatorLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messagePanelLayout.createSequentialGroup()
                .addGap(0, 52, Short.MAX_VALUE)
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messagePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, messagePanelLayout.createSequentialGroup()
                        .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201))))
        );
        messagePanelLayout.setVerticalGroup(
            messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(messagePanelLayout.createSequentialGroup()
                .addComponent(messageBoxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(messageUserIndicatorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(messagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageUserIndicatorLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void userComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userComboBoxActionPerformed
        // TODO add your handling code here:
        loadMessages();
    }//GEN-LAST:event_userComboBoxActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        SendMessageForm sendMessageForm = new SendMessageForm(username);
        sendMessageForm.setVisible(true);        
    }//GEN-LAST:event_sendButtonActionPerformed

    private void loadEmployeeList() {
        List<Employee> employees = employeeRepository.findAll();
        userComboBox.removeAllItems();
            for (Employee employee : employees) {
                userComboBox.addItem(employee.getName());
            }
        }
    
    private void loadMessages() {
        String selectedUser = (String) userComboBox.getSelectedItem();
        if (selectedUser == null)
            return;

        Integer selectedUserId = employeeRepository.findEmployeeIdByName(selectedUser);
        if (selectedUserId == null)
            return;

        Integer realId = accountRepository.findEmployeeIdByUsername(username);
        if (realId == null)
            return;

        List<Message> messages = messageRepository.findAll();
        model = (DefaultTableModel) messageTable.getModel();
        model.setRowCount(0); // Clear existing rows

        for (Message message : messages) {
            Integer senderId = message.getSenderID();
            Integer receiverId = message.getReceiverID();
            String senderName = employeeRepository.findEmployeeNameById(senderId);
            String receiverName = employeeRepository.findEmployeeNameById(receiverId);
            String content = message.getContent(); // Ensure correct content is fetched here

            // Debugging statements to verify message content
            System.out.println("Message: senderId=" + senderId + ", receiverId=" + receiverId + ", content=" + content);

            if ((senderId.equals(realId) && receiverId.equals(selectedUserId)) ||
                    (senderId.equals(selectedUserId) && receiverId.equals(realId))) {
                System.out.println("Adding row: " + senderName + ", " + receiverName + ", " + content);
                model.addRow(new Object[] { senderName, receiverName, content });
            }
        }
    }
    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MessageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MessageForm("user1").setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageBoxLabel;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JTable messageTable;
    private javax.swing.JLabel messageUserIndicatorLabel;
    private javax.swing.JLabel messageUserIndicatorLabel1;
    private javax.swing.JButton sendButton;
    private javax.swing.JComboBox<String> userComboBox;
    // End of variables declaration//GEN-END:variables
}
